all:
COMMON = $(BASEDIR)/common
CLIENT = $(BASEDIR)/client
SERVER = $(BASEDIR)/server
FRAMEWORKS = /Library/Frameworks

# Mac options
# UNIX-style builds on Mac OS X (i.e. without frameworks)
#UNIXSTYLE = 1
# Universal Binary builds
UNIVERSAL = 1

MACHINE = $(shell uname -s)
ifeq ($(MACHINE),)
MACHINE = Windows
else
ifeq ($(shell echo $(MACHINE) | cut -c 1-5),MINGW)
MACHINE = Windows
endif
endif

ifeq ($(MACHINE)$(UNIXSTYLE),Darwin)
FLAGS_SDL = -I$(FRAMEWORKS)/SDL.framework/Headers -I$(FRAMEWORKS)/SDL_net.framework/Headers
FLAGS_SDL_OTHER  = -I$(FRAMEWORKS)/SDL_image.framework/Headers
FLAGS_SDL_OTHER += -I$(FRAMEWORKS)/SDL_ttf.framework/Headers
FLAGS_SDL_OTHER += -I$(FRAMEWORKS)/SDL_mixer.framework/Headers
LIBS += -framework AppKit
LIBS_SDL = -framework SDL -framework SDL_net 
LIBS_SDL_OTHER = -framework SDL_image -framework SDL_ttf -framework SDL_mixer
ifneq ($(UNIVERSAL),)
CFLAGS += -arch ppc -arch i386
endif
else
FLAGS_SDL = $(shell sdl-config --cflags)
LIBS_SDL = $(shell sdl-config --libs) -lSDL_net 
LIBS_SDL_OTHER = -lSDL_image -lSDL_ttf -lSDL_mixer
endif

ifeq ($(MACHINE),Darwin)
FLAGS_GL = -FOpenGL
LIBS_GL = -framework OpenGL
else
ifeq ($(MACHINE),Windows)
LIBS_GL = -lopengl32
else
LIBS_GL = -L/usr/X11/lib/ -lGL
endif
endif

INCLUDES = -I$(BASEDIR)

CFLAGS += -Wall -g
LDFLAGS += $(CFLAGS)
CFLAGS += $(FLAGS_SDL) $(FLAGS_GL) $(INCLUDES)
LIBS += $(LIBS_SDL)
ifeq ($(MACHINE),Windows)
LIBS += -lwsock32
endif
CLIENTFLAGS = $(FLAGS_SDL_OTHER)
CLIENTLIBS = $(LIBS_GL) $(LIBS) $(LIBS_SDL_OTHER)

CXXFLAGS += $(CFLAGS) -fno-rtti

H_GL	= $(CLIENT)/compat_gl.h
H_SDL	= $(CLIENT)/compat_sdl.h

H_LMEXCEPTION	= $(COMMON)/LMException.hpp

H_CLIENTNETWORK		= $(CLIENT)/ClientNetwork.hpp
H_CLIENTSDL		= $(CLIENT)/ClientSDL.hpp
H_GAMECONTROLLER	= $(CLIENT)/GameController.hpp
H_GAMEWINDOW		= $(CLIENT)/GameWindow.hpp

H_GAMEWINDOW		+= $(H_SDL)
H_GAMECONTROLLER	+= $(H_GAMEWINDOW) $(H_CLIENTNETWORK)
